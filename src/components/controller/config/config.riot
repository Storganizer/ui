<config>

  <label for="api-url">Api URL</label>
  <input placeholder="http://localhost:5000" name="api-url" id="api-url" type="text" value="{ state.apiUrl }"></input>


  <label if={ state.cameras.length > 1 } for="cameraId">Preferred camera</label>
  <select if={ state.cameras.length > 1 } name="cameraId" id="cameraId">
    <option selected={ !state.cameraId || state.cameraId == '' } value="" >choose camera</option>
    <option selected={ state.cameraId == camera.id } each={ camera in state.cameras } value={ camera.id }>{ camera.label }</option>
  </select>

  <button onclick={ save }>Save</button>


  <label>Backup</label>
  <button onclick="{ backup }" href="#backup">Backup (Only data - No images yet)</button>
  <label>Restore</label>
  <button onclick={ restore }>Restore (Only data - No images yet)</button>

  <script>

    export default {
      localStorage: window.localStorage,

      state: {
        apiUrl: "http://localhost:5000",
        cameraId: "",
        cameras: [],
      },

      save(e) {
        let apiUrl = document.getElementById("api-url").value
        this.registry.dataStore.setApiHost(apiUrl)
        this.localStorage.setItem("apiUrl", apiUrl)

        let cameraIdSelect = document.getElementById("cameraId")
        let cameraId = ''
        if (cameraIdSelect) {
          cameraId = cameraIdSelect.value
        } else if (this.state.cameras.length == 1) {
          cameraId = this.state.cameras[0].id
        }

        this.localStorage.setItem("cameraId", cameraId)
      },

      backup(e) {
        //res.writeHead(200, {'Content-Type': 'application/force-download','Content-disposition':'attachment; filename=file.txt'});
        alert('backup')
      },

      restore(e) {
        alert('restore')
      },

      async onMounted(e) {
        let devices = await navigator.mediaDevices.enumerateDevices();
        let cameras = [];
        for (const device of devices) {
            if (device.kind === "videoinput") {
                cameras.push({
                    id: device.deviceId,
                    label: device.label
                })
            }
        }

        this.update({
          apiUrl: this.localStorage.getItem("apiUrl"),
          cameraId: this.localStorage.getItem("cameraId"),
          cameras: cameras,
        })
      },

    }
  </script>
</config>