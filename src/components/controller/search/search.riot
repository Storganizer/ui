<search>


  <scan-qr-code></scan-qr-code>


  <div class="search"><input onkeyup={typeahead} type="text" placeholder="search" id="search" name="search"></div>

  <div class="results">
    <element-list if={ state.locations.length } elements={ state.locations } type="location" />
    <element-list if={ state.boxes.length }  elements={ state.boxes } type="box" />
    <element-list if={ state.items.length }  elements={ state.items } type="item" />
  </div>

  <script>
    import  './style.css'

    import ScanQrCode from '../../includes/_helper/scan-qr-code.riot'
    import ElementList from '../../includes/_helper/element-list.riot'


    export default {
      components: {
        ScanQrCode,
        ElementList,
      },

      state: {
        locations: [],
        boxes: [],
        items: [],
      },

      typeahead(e, allowEmpty = false) {
        let searchString = e.target.value
        this.search(searchString)
      },

      search(searchString, allowEmpty = false) {
        this.update({
          locations: this.registry.dataStore.locations.search(searchString),
          boxes: this.registry.dataStore.boxes.search(searchString),
          items: this.registry.dataStore.items.search(searchString),
        })
      },

      setupListenter() {
        let target = this

        this.registry.eventBus.on('dataItemLoadSuccess', function(locations) {
          target.loadItemData()
        })

        this.registry.eventBus.on('dataBoxLoadSuccess', function(locations) {
          target.loadBoxData()
        })

        this.registry.eventBus.on('dataLocationLoadSuccess', function(locations) {
          target.loadLocationData()
        })

      },

      loadLocationData() {
        this.update({
          locations: this.registry.dataStore.locations.getLocations()
        })
      },

      loadBoxData() {
        this.update({
          boxes: this.registry.dataStore.boxes.getBoxes()
        })
      },

      loadItemData() {
        this.update({
          items: this.registry.dataStore.items.getItems()
        })

      },

      onMounted() {
        this.setupListenter()
        this.loadItemData()
        this.loadBoxData()
        this.loadLocationData()
      }

    }
  </script>
</search>