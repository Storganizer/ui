<navigation class="no-print">
    <div class="header">
      <a onclick={ registry.application.clickHandler } href="#locations" class="logo"><img width="20px" src="./storganizer-logo.png" /> <div class="app-title">Storganizer</div></a>
      <input class="menu-btn" type="checkbox" id="menu-btn" />
      <label class="menu-icon" for="menu-btn"><span class="navicon"></span></label>
      <ul class="menu">
        <li class={ state.classes.locations }><a onclick={ registry.application.clickHandler } href="#locations">Locations</a></li>
        <li class={ state.classes.boxes }><a onclick={ registry.application.clickHandler } href="#boxes">Boxes</a></li>
        <li class={ state.classes.items }><a onclick={ registry.application.clickHandler } href="#items">Items</a></li>
        <li class={ state.classes.search }><a onclick={ registry.application.clickHandler } href="#search"><i class="fa-solid fa-magnifying-glass"></i></a></li>
        <li class={ state.classes.config }><a onclick={ registry.application.clickHandler } href="#config"><i class="fa-solid fa-gear"></i></a></li>
      </ul>
    </div>
  <script>
    import './navigation.css'


    export default {
      state: {
        classes: {
          locations: '',
          boxes: '',
          items: '',
          search: '',
          config: '',
        }
      },

      setupListener() {
        this.registry.eventBus.on('applicationRender', this.onApplicationRender)
      },

      onApplicationRender() {
        let controller = this.registry.application.getController(document.URL)
        let classes = {
          locations: controller.name == 'locations' || controller.name == 'location' ? 'active' : '',
          boxes: controller.name == 'boxes' || controller.name == 'box' ? 'active' : '',
          items: controller.name == 'items' || controller.name == 'item' ? 'active' : '',
          search: controller.name == 'search' ? 'active' : '',
          config: controller.name == 'config' ? 'active' : '',
        }

        this.update({
          classes: classes 
        })
      },


      onMounted() {
        this.setupListener()
      },
    }

  </script>
</navigation>
