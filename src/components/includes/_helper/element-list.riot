<element-list class="no-print">
    <div class="clearfix"></div>
    <div if={ props.add } class="add-entry no-print">
      <a onclick={ registry.application.clickHandler } href="{ props.add }"><i class="fa fa-plus"></i></a>
    </div>

    <h2>
      <i if={ props.type == 'item' } class="fa-solid fa-screwdriver-wrench"></i>
      <i if={ props.type == 'box' } class="fa-solid fa-boxes-stacked"></i>
      <i if={ props.type == 'person' } class="fa-solid fa-person"></i>
      <i if={ props.type == 'locationType' } class="fa-solid fa-location-dot"></i>
      <i if={ props.type == 'location' } class="fa-solid fa-location-dot"></i>
      { props.elements.length }
      <span if={ props.type == 'item' }> Items</span>
      <span if={ props.type == 'box' }> Boxes</span>
      <span if={ props.type == 'person' }> Persons</span>
      <span if={ props.type == 'locationType' }> Location Types</span>
      <span if={ props.type == 'location' }> Locations</span>
    </h2>

    <div if={ state.listView == 'image' }>
      <a style="background-image: url('{state.apiUrl}{element.image}')" class="image-list" each={ element in props.elements } key={ element.id }  onclick={ registry.application.clickHandler } href="#{props.type}/{ element.id }">
        <div>
          <i if={ props.type == 'item' } class="fa-solid fa-screwdriver-wrench"></i>
          <i if={ props.type == 'box' } class="fa-solid fa-boxes-stacked"></i>
          <i if={ props.type == 'location' } class="fa-solid fa-location-dot"></i>
          <i if={ props.type == 'person' } class="fa-solid fa-person"></i>
          { element.name }
        </div>
      </a>
      <div class="clearfix last"></div>
    </div>


    <table if={ state.listView == 'list' }>
      <tbody>
        <tr each={ element in props.elements } key={ element.id }>
          <td>
            <a onclick={ registry.application.clickHandler } href="#{props.type}/{ element.id }">{ element.name }</a>
          </td>
          <td class="description">{ element.description }</td>
          <td if={ props.type == 'item' } class="length">{ element.amount }</td>
          <td if={ props.type == 'box' } class="length">{ element.lenItems }</td>
          <td if={ props.type == 'location' || props.type == 'person' } class="length">{ element.lenBoxes }</td>
        </tr>
      </tbody>
    </table>

  <script>
    export default {
      state: {
        apiUrl: window.localStorage.getItem("apiUrl"),
        listView: window.localStorage.getItem("listView"),
      },
    }
  </script>

  <style>

    element-list {
      display: block;
      background-color: white;
      padding: 10px;
      border-radius: 3px;
    }

    div.add-entry {
        position: absolute;
        right: 40px;
        top: 10px !important;
    }


    div.add-entry a {
      background: white;
      display: flex;
      align-content: center;
      text-align: center;
      width: 40px;
      height: 45px;
      border-radius: 3px;
      padding: 5px;
      margin: 0px;
      font-size: 3rem;
    }

    .image-list {
      width: 140px;
      height: 140px;
      margin: 5px;
      padding: 5px;
      float: left;
      /*border: 1px solid red;*/
      border-radius: 3px;
      background-size: 140px 140px;
    }

    .image-list div {
      padding: 2px;
      font-size: small;
      background-color: #FFFFFF;
      border-radius: 3px;
      text-overflow: ellipsis;
    }

    .image-list div i {
      margin-right: 3px;
    }

    .last {
      margin-bottom: 10px;
    }
  </style>



</element-list>